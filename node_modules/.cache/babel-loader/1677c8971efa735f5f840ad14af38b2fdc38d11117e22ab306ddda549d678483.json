{"ast":null,"code":"import _slicedToArray from \"/Users/williamberggren/Documents/pwa/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef, unstable_useId as useId, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport useButton from '../useButton';\nimport { SelectActionTypes } from './useSelect.types';\nimport useList from '../useList';\nimport defaultOptionStringifier from './defaultOptionStringifier';\nimport { useCompoundParent } from '../utils/useCompound';\nimport selectReducer from './selectReducer';\n\n/**\n *\n * Demos:\n *\n * - [Select](https://mui.com/base/react-select/#hooks)\n *\n * API:\n *\n * - [useSelect API](https://mui.com/base/react-select/hooks-api/#use-select)\n */\nfunction useSelect(props) {\n  var buttonRefProp = props.buttonRef,\n    _props$defaultOpen = props.defaultOpen,\n    defaultOpen = _props$defaultOpen === void 0 ? false : _props$defaultOpen,\n    defaultValueProp = props.defaultValue,\n    _props$disabled = props.disabled,\n    disabled = _props$disabled === void 0 ? false : _props$disabled,\n    listboxIdProp = props.listboxId,\n    listboxRefProp = props.listboxRef,\n    _props$multiple = props.multiple,\n    multiple = _props$multiple === void 0 ? false : _props$multiple,\n    onChange = props.onChange,\n    onHighlightChange = props.onHighlightChange,\n    onOpenChange = props.onOpenChange,\n    openProp = props.open,\n    optionsParam = props.options,\n    _props$optionStringif = props.optionStringifier,\n    optionStringifier = _props$optionStringif === void 0 ? defaultOptionStringifier : _props$optionStringif,\n    valueProp = props.value;\n  var buttonRef = React.useRef(null);\n  var handleButtonRef = useForkRef(buttonRefProp, buttonRef);\n  var listboxRef = React.useRef(null);\n  var listboxId = useId(listboxIdProp);\n  var defaultValue;\n  if (valueProp === undefined && defaultValueProp === undefined) {\n    defaultValue = [];\n  } else if (defaultValueProp !== undefined) {\n    defaultValue = multiple ? defaultValueProp : [defaultValueProp];\n  }\n  var value = React.useMemo(function () {\n    if (valueProp !== undefined) {\n      return multiple ? valueProp : [valueProp];\n    }\n    return undefined;\n  }, [valueProp, multiple]);\n  var _useCompoundParent = useCompoundParent(),\n    subitems = _useCompoundParent.subitems,\n    compoundComponentContextValue = _useCompoundParent.contextValue;\n  var options = React.useMemo(function () {\n    if (optionsParam != null) {\n      return new Map(optionsParam.map(function (option, index) {\n        return [option.value, {\n          value: option.value,\n          label: option.label,\n          disabled: option.disabled,\n          ref: /*#__PURE__*/React.createRef(),\n          id: \"\".concat(listboxId, \"_\").concat(index)\n        }];\n      }));\n    }\n    return subitems;\n  }, [optionsParam, subitems, listboxId]);\n\n  // prevents closing the listbox on keyUp right after opening it\n  var ignoreEnterKeyUp = React.useRef(false);\n\n  // prevents reopening the listbox when button is clicked\n  // (listbox closes on lost focus, then immediately reopens on click)\n  var ignoreClick = React.useRef(false);\n\n  // Ensure the listbox is focused after opening\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    listboxFocusRequested = _React$useState2[0],\n    requestListboxFocus = _React$useState2[1];\n  var focusListboxIfRequested = React.useCallback(function () {\n    if (listboxFocusRequested && listboxRef.current != null) {\n      listboxRef.current.focus();\n      requestListboxFocus(false);\n    }\n  }, [listboxFocusRequested]);\n  var handleListboxRef = useForkRef(listboxRefProp, listboxRef, focusListboxIfRequested);\n  var _useButton = useButton({\n      disabled: disabled,\n      rootRef: handleButtonRef\n    }),\n    getButtonRootProps = _useButton.getRootProps,\n    buttonActive = _useButton.active,\n    buttonFocusVisible = _useButton.focusVisible,\n    mergedButtonRef = _useButton.rootRef;\n  var optionValues = React.useMemo(function () {\n    return Array.from(options.keys());\n  }, [options]);\n  var isItemDisabled = React.useCallback(function (valueToCheck) {\n    var _option$disabled;\n    var option = options.get(valueToCheck);\n    return (_option$disabled = option == null ? void 0 : option.disabled) != null ? _option$disabled : false;\n  }, [options]);\n  var stringifyOption = React.useCallback(function (valueToCheck) {\n    var option = options.get(valueToCheck);\n    if (!option) {\n      return '';\n    }\n    return optionStringifier(option);\n  }, [options, optionStringifier]);\n  var controlledState = React.useMemo(function () {\n    return {\n      selectedValues: value,\n      open: openProp\n    };\n  }, [value, openProp]);\n  var getItemId = React.useCallback(function (itemValue) {\n    var _options$get;\n    return (_options$get = options.get(itemValue)) == null ? void 0 : _options$get.id;\n  }, [options]);\n  var handleSelectionChange = React.useCallback(function (event, newValues) {\n    if (multiple) {\n      onChange == null ? void 0 : onChange(event, newValues);\n    } else {\n      var _newValues$;\n      onChange == null ? void 0 : onChange(event, (_newValues$ = newValues[0]) != null ? _newValues$ : null);\n    }\n  }, [multiple, onChange]);\n  var handleHighlightChange = React.useCallback(function (event, newValue) {\n    onHighlightChange == null ? void 0 : onHighlightChange(event, newValue != null ? newValue : null);\n  }, [onHighlightChange]);\n  var handleStateChange = React.useCallback(function (e, field, fieldValue) {\n    if (field === 'open') {\n      onOpenChange == null ? void 0 : onOpenChange(fieldValue);\n      if (fieldValue === false && (e == null ? void 0 : e.type) !== 'blur') {\n        var _buttonRef$current;\n        (_buttonRef$current = buttonRef.current) == null ? void 0 : _buttonRef$current.focus();\n      }\n    }\n  }, [onOpenChange]);\n  var useListParameters = {\n    getInitialState: function getInitialState() {\n      var _defaultValue;\n      return {\n        highlightedValue: null,\n        selectedValues: (_defaultValue = defaultValue) != null ? _defaultValue : [],\n        open: defaultOpen\n      };\n    },\n    getItemId: getItemId,\n    controlledProps: controlledState,\n    isItemDisabled: isItemDisabled,\n    rootRef: handleListboxRef,\n    onChange: handleSelectionChange,\n    onHighlightChange: handleHighlightChange,\n    onStateChange: handleStateChange,\n    reducerActionContext: React.useMemo(function () {\n      return {\n        multiple: multiple\n      };\n    }, [multiple]),\n    items: optionValues,\n    itemStringifier: stringifyOption,\n    selectionMode: multiple ? 'multiple' : 'single',\n    stateReducer: selectReducer\n  };\n  var _useList = useList(useListParameters),\n    dispatch = _useList.dispatch,\n    getListboxRootProps = _useList.getRootProps,\n    listContextValue = _useList.contextValue,\n    _useList$state = _useList.state,\n    open = _useList$state.open,\n    highlightedOption = _useList$state.highlightedValue,\n    selectedOptions = _useList$state.selectedValues,\n    mergedListboxRef = _useList.rootRef;\n  React.useEffect(function () {\n    focusListboxIfRequested();\n  }, [focusListboxIfRequested]);\n  React.useEffect(function () {\n    requestListboxFocus(open);\n  }, [open]);\n  var createHandleMouseDown = function createHandleMouseDown(otherHandlers) {\n    return function (event) {\n      var _otherHandlers$onMous;\n      otherHandlers == null ? void 0 : (_otherHandlers$onMous = otherHandlers.onMouseDown) == null ? void 0 : _otherHandlers$onMous.call(otherHandlers, event);\n      if (!event.defaultPrevented && open) {\n        ignoreClick.current = true;\n      }\n    };\n  };\n  var createHandleButtonClick = function createHandleButtonClick(otherHandlers) {\n    return function (event) {\n      var _otherHandlers$onClic;\n      otherHandlers == null ? void 0 : (_otherHandlers$onClic = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic.call(otherHandlers, event);\n      if (!event.defaultPrevented && !ignoreClick.current) {\n        var action = {\n          type: SelectActionTypes.buttonClick,\n          event: event\n        };\n        dispatch(action);\n      }\n      ignoreClick.current = false;\n    };\n  };\n  var createHandleButtonKeyDown = function createHandleButtonKeyDown(otherHandlers) {\n    return function (event) {\n      var _otherHandlers$onKeyD;\n      otherHandlers == null ? void 0 : (_otherHandlers$onKeyD = otherHandlers.onKeyDown) == null ? void 0 : _otherHandlers$onKeyD.call(otherHandlers, event);\n      if (event.defaultPrevented) {\n        return;\n      }\n      if (event.key === 'Enter') {\n        ignoreEnterKeyUp.current = true;\n      }\n      if (event.key === 'ArrowDown' || event.key === 'ArrowUp') {\n        event.preventDefault();\n        dispatch({\n          type: SelectActionTypes.buttonArrowKeyDown,\n          key: event.key,\n          event: event\n        });\n      }\n    };\n  };\n  var createHandleListboxKeyUp = function createHandleListboxKeyUp(otherHandlers) {\n    return function (event) {\n      var _otherHandlers$onKeyU;\n      otherHandlers == null ? void 0 : (_otherHandlers$onKeyU = otherHandlers.onKeyUp) == null ? void 0 : _otherHandlers$onKeyU.call(otherHandlers, event);\n      if (event.defaultPrevented) {\n        return;\n      }\n      var closingKeys = multiple ? ['Escape'] : ['Escape', 'Enter', ' '];\n      if (open && !ignoreEnterKeyUp.current && closingKeys.includes(event.key)) {\n        var _buttonRef$current2;\n        buttonRef == null ? void 0 : (_buttonRef$current2 = buttonRef.current) == null ? void 0 : _buttonRef$current2.focus();\n      }\n      ignoreEnterKeyUp.current = false;\n    };\n  };\n  useEnhancedEffect(function () {\n    // Scroll to the currently highlighted option.\n    if (highlightedOption != null) {\n      var _options$get2;\n      var optionRef = (_options$get2 = options.get(highlightedOption)) == null ? void 0 : _options$get2.ref;\n      if (!listboxRef.current || !(optionRef != null && optionRef.current)) {\n        return;\n      }\n      var listboxClientRect = listboxRef.current.getBoundingClientRect();\n      var optionClientRect = optionRef.current.getBoundingClientRect();\n      if (optionClientRect.top < listboxClientRect.top) {\n        listboxRef.current.scrollTop -= listboxClientRect.top - optionClientRect.top;\n      } else if (optionClientRect.bottom > listboxClientRect.bottom) {\n        listboxRef.current.scrollTop += optionClientRect.bottom - listboxClientRect.bottom;\n      }\n    }\n  }, [highlightedOption, options]);\n  var getButtonProps = function getButtonProps() {\n    var otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _extends({}, getButtonRootProps(_extends({}, otherHandlers, {\n      onClick: createHandleButtonClick(otherHandlers),\n      onMouseDown: createHandleMouseDown(otherHandlers),\n      onKeyDown: createHandleButtonKeyDown(otherHandlers)\n    })), {\n      role: 'combobox',\n      'aria-expanded': open,\n      'aria-haspopup': 'listbox',\n      'aria-controls': listboxId\n    });\n  };\n  var getOptionMetadata = React.useCallback(function (optionValue) {\n    return options.get(optionValue);\n  }, [options]);\n  var getListboxProps = function getListboxProps() {\n    var otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _extends({}, getListboxRootProps(_extends({}, otherHandlers, {\n      onKeyUp: createHandleListboxKeyUp(otherHandlers)\n    })), {\n      id: listboxId,\n      role: 'listbox',\n      'aria-multiselectable': multiple ? 'true' : undefined\n    });\n  };\n  React.useDebugValue({\n    selectedOptions: selectedOptions,\n    highlightedOption: highlightedOption,\n    open: open\n  });\n  var contextValue = React.useMemo(function () {\n    return _extends({}, listContextValue, compoundComponentContextValue);\n  }, [listContextValue, compoundComponentContextValue]);\n  var selectValue;\n  if (props.multiple) {\n    selectValue = selectedOptions;\n  } else {\n    selectValue = selectedOptions.length > 0 ? selectedOptions[0] : null;\n  }\n  return {\n    buttonActive: buttonActive,\n    buttonFocusVisible: buttonFocusVisible,\n    buttonRef: mergedButtonRef,\n    contextValue: contextValue,\n    disabled: disabled,\n    dispatch: dispatch,\n    getButtonProps: getButtonProps,\n    getListboxProps: getListboxProps,\n    getOptionMetadata: getOptionMetadata,\n    listboxRef: mergedListboxRef,\n    open: open,\n    options: optionValues,\n    value: selectValue,\n    highlightedOption: highlightedOption\n  };\n}\nexport default useSelect;","map":{"version":3,"names":["_extends","React","unstable_useForkRef","useForkRef","unstable_useId","useId","unstable_useEnhancedEffect","useEnhancedEffect","useButton","SelectActionTypes","useList","defaultOptionStringifier","useCompoundParent","selectReducer","useSelect","props","buttonRefProp","buttonRef","_props$defaultOpen","defaultOpen","defaultValueProp","defaultValue","_props$disabled","disabled","listboxIdProp","listboxId","listboxRefProp","listboxRef","_props$multiple","multiple","onChange","onHighlightChange","onOpenChange","openProp","open","optionsParam","options","_props$optionStringif","optionStringifier","valueProp","value","useRef","handleButtonRef","undefined","useMemo","_useCompoundParent","subitems","compoundComponentContextValue","contextValue","Map","map","option","index","label","ref","createRef","id","concat","ignoreEnterKeyUp","ignoreClick","_React$useState","useState","_React$useState2","_slicedToArray","listboxFocusRequested","requestListboxFocus","focusListboxIfRequested","useCallback","current","focus","handleListboxRef","_useButton","rootRef","getButtonRootProps","getRootProps","buttonActive","active","buttonFocusVisible","focusVisible","mergedButtonRef","optionValues","Array","from","keys","isItemDisabled","valueToCheck","_option$disabled","get","stringifyOption","controlledState","selectedValues","getItemId","itemValue","_options$get","handleSelectionChange","event","newValues","_newValues$","handleHighlightChange","newValue","handleStateChange","e","field","fieldValue","type","_buttonRef$current","useListParameters","getInitialState","_defaultValue","highlightedValue","controlledProps","onStateChange","reducerActionContext","items","itemStringifier","selectionMode","stateReducer","_useList","dispatch","getListboxRootProps","listContextValue","_useList$state","state","highlightedOption","selectedOptions","mergedListboxRef","useEffect","createHandleMouseDown","otherHandlers","_otherHandlers$onMous","onMouseDown","call","defaultPrevented","createHandleButtonClick","_otherHandlers$onClic","onClick","action","buttonClick","createHandleButtonKeyDown","_otherHandlers$onKeyD","onKeyDown","key","preventDefault","buttonArrowKeyDown","createHandleListboxKeyUp","_otherHandlers$onKeyU","onKeyUp","closingKeys","includes","_buttonRef$current2","_options$get2","optionRef","listboxClientRect","getBoundingClientRect","optionClientRect","top","scrollTop","bottom","getButtonProps","arguments","length","role","getOptionMetadata","optionValue","getListboxProps","useDebugValue","selectValue"],"sources":["/Users/williamberggren/Documents/pwa/node_modules/@mui/base/useSelect/useSelect.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef, unstable_useId as useId, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport useButton from '../useButton';\nimport { SelectActionTypes } from './useSelect.types';\nimport useList from '../useList';\nimport defaultOptionStringifier from './defaultOptionStringifier';\nimport { useCompoundParent } from '../utils/useCompound';\nimport selectReducer from './selectReducer';\n\n/**\n *\n * Demos:\n *\n * - [Select](https://mui.com/base/react-select/#hooks)\n *\n * API:\n *\n * - [useSelect API](https://mui.com/base/react-select/hooks-api/#use-select)\n */\nfunction useSelect(props) {\n  const {\n    buttonRef: buttonRefProp,\n    defaultOpen = false,\n    defaultValue: defaultValueProp,\n    disabled = false,\n    listboxId: listboxIdProp,\n    listboxRef: listboxRefProp,\n    multiple = false,\n    onChange,\n    onHighlightChange,\n    onOpenChange,\n    open: openProp,\n    options: optionsParam,\n    optionStringifier = defaultOptionStringifier,\n    value: valueProp\n  } = props;\n  const buttonRef = React.useRef(null);\n  const handleButtonRef = useForkRef(buttonRefProp, buttonRef);\n  const listboxRef = React.useRef(null);\n  const listboxId = useId(listboxIdProp);\n  let defaultValue;\n  if (valueProp === undefined && defaultValueProp === undefined) {\n    defaultValue = [];\n  } else if (defaultValueProp !== undefined) {\n    defaultValue = multiple ? defaultValueProp : [defaultValueProp];\n  }\n  const value = React.useMemo(() => {\n    if (valueProp !== undefined) {\n      return multiple ? valueProp : [valueProp];\n    }\n    return undefined;\n  }, [valueProp, multiple]);\n  const {\n    subitems,\n    contextValue: compoundComponentContextValue\n  } = useCompoundParent();\n  const options = React.useMemo(() => {\n    if (optionsParam != null) {\n      return new Map(optionsParam.map((option, index) => [option.value, {\n        value: option.value,\n        label: option.label,\n        disabled: option.disabled,\n        ref: /*#__PURE__*/React.createRef(),\n        id: `${listboxId}_${index}`\n      }]));\n    }\n    return subitems;\n  }, [optionsParam, subitems, listboxId]);\n\n  // prevents closing the listbox on keyUp right after opening it\n  const ignoreEnterKeyUp = React.useRef(false);\n\n  // prevents reopening the listbox when button is clicked\n  // (listbox closes on lost focus, then immediately reopens on click)\n  const ignoreClick = React.useRef(false);\n\n  // Ensure the listbox is focused after opening\n  const [listboxFocusRequested, requestListboxFocus] = React.useState(false);\n  const focusListboxIfRequested = React.useCallback(() => {\n    if (listboxFocusRequested && listboxRef.current != null) {\n      listboxRef.current.focus();\n      requestListboxFocus(false);\n    }\n  }, [listboxFocusRequested]);\n  const handleListboxRef = useForkRef(listboxRefProp, listboxRef, focusListboxIfRequested);\n  const {\n    getRootProps: getButtonRootProps,\n    active: buttonActive,\n    focusVisible: buttonFocusVisible,\n    rootRef: mergedButtonRef\n  } = useButton({\n    disabled,\n    rootRef: handleButtonRef\n  });\n  const optionValues = React.useMemo(() => Array.from(options.keys()), [options]);\n  const isItemDisabled = React.useCallback(valueToCheck => {\n    var _option$disabled;\n    const option = options.get(valueToCheck);\n    return (_option$disabled = option == null ? void 0 : option.disabled) != null ? _option$disabled : false;\n  }, [options]);\n  const stringifyOption = React.useCallback(valueToCheck => {\n    const option = options.get(valueToCheck);\n    if (!option) {\n      return '';\n    }\n    return optionStringifier(option);\n  }, [options, optionStringifier]);\n  const controlledState = React.useMemo(() => ({\n    selectedValues: value,\n    open: openProp\n  }), [value, openProp]);\n  const getItemId = React.useCallback(itemValue => {\n    var _options$get;\n    return (_options$get = options.get(itemValue)) == null ? void 0 : _options$get.id;\n  }, [options]);\n  const handleSelectionChange = React.useCallback((event, newValues) => {\n    if (multiple) {\n      onChange == null ? void 0 : onChange(event, newValues);\n    } else {\n      var _newValues$;\n      onChange == null ? void 0 : onChange(event, (_newValues$ = newValues[0]) != null ? _newValues$ : null);\n    }\n  }, [multiple, onChange]);\n  const handleHighlightChange = React.useCallback((event, newValue) => {\n    onHighlightChange == null ? void 0 : onHighlightChange(event, newValue != null ? newValue : null);\n  }, [onHighlightChange]);\n  const handleStateChange = React.useCallback((e, field, fieldValue) => {\n    if (field === 'open') {\n      onOpenChange == null ? void 0 : onOpenChange(fieldValue);\n      if (fieldValue === false && (e == null ? void 0 : e.type) !== 'blur') {\n        var _buttonRef$current;\n        (_buttonRef$current = buttonRef.current) == null ? void 0 : _buttonRef$current.focus();\n      }\n    }\n  }, [onOpenChange]);\n  const useListParameters = {\n    getInitialState: () => {\n      var _defaultValue;\n      return {\n        highlightedValue: null,\n        selectedValues: (_defaultValue = defaultValue) != null ? _defaultValue : [],\n        open: defaultOpen\n      };\n    },\n    getItemId,\n    controlledProps: controlledState,\n    isItemDisabled,\n    rootRef: handleListboxRef,\n    onChange: handleSelectionChange,\n    onHighlightChange: handleHighlightChange,\n    onStateChange: handleStateChange,\n    reducerActionContext: React.useMemo(() => ({\n      multiple\n    }), [multiple]),\n    items: optionValues,\n    itemStringifier: stringifyOption,\n    selectionMode: multiple ? 'multiple' : 'single',\n    stateReducer: selectReducer\n  };\n  const {\n    dispatch,\n    getRootProps: getListboxRootProps,\n    contextValue: listContextValue,\n    state: {\n      open,\n      highlightedValue: highlightedOption,\n      selectedValues: selectedOptions\n    },\n    rootRef: mergedListboxRef\n  } = useList(useListParameters);\n  React.useEffect(() => {\n    focusListboxIfRequested();\n  }, [focusListboxIfRequested]);\n  React.useEffect(() => {\n    requestListboxFocus(open);\n  }, [open]);\n  const createHandleMouseDown = otherHandlers => event => {\n    var _otherHandlers$onMous;\n    otherHandlers == null ? void 0 : (_otherHandlers$onMous = otherHandlers.onMouseDown) == null ? void 0 : _otherHandlers$onMous.call(otherHandlers, event);\n    if (!event.defaultPrevented && open) {\n      ignoreClick.current = true;\n    }\n  };\n  const createHandleButtonClick = otherHandlers => event => {\n    var _otherHandlers$onClic;\n    otherHandlers == null ? void 0 : (_otherHandlers$onClic = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic.call(otherHandlers, event);\n    if (!event.defaultPrevented && !ignoreClick.current) {\n      const action = {\n        type: SelectActionTypes.buttonClick,\n        event\n      };\n      dispatch(action);\n    }\n    ignoreClick.current = false;\n  };\n  const createHandleButtonKeyDown = otherHandlers => event => {\n    var _otherHandlers$onKeyD;\n    otherHandlers == null ? void 0 : (_otherHandlers$onKeyD = otherHandlers.onKeyDown) == null ? void 0 : _otherHandlers$onKeyD.call(otherHandlers, event);\n    if (event.defaultPrevented) {\n      return;\n    }\n    if (event.key === 'Enter') {\n      ignoreEnterKeyUp.current = true;\n    }\n    if (event.key === 'ArrowDown' || event.key === 'ArrowUp') {\n      event.preventDefault();\n      dispatch({\n        type: SelectActionTypes.buttonArrowKeyDown,\n        key: event.key,\n        event\n      });\n    }\n  };\n  const createHandleListboxKeyUp = otherHandlers => event => {\n    var _otherHandlers$onKeyU;\n    otherHandlers == null ? void 0 : (_otherHandlers$onKeyU = otherHandlers.onKeyUp) == null ? void 0 : _otherHandlers$onKeyU.call(otherHandlers, event);\n    if (event.defaultPrevented) {\n      return;\n    }\n    const closingKeys = multiple ? ['Escape'] : ['Escape', 'Enter', ' '];\n    if (open && !ignoreEnterKeyUp.current && closingKeys.includes(event.key)) {\n      var _buttonRef$current2;\n      buttonRef == null ? void 0 : (_buttonRef$current2 = buttonRef.current) == null ? void 0 : _buttonRef$current2.focus();\n    }\n    ignoreEnterKeyUp.current = false;\n  };\n  useEnhancedEffect(() => {\n    // Scroll to the currently highlighted option.\n    if (highlightedOption != null) {\n      var _options$get2;\n      const optionRef = (_options$get2 = options.get(highlightedOption)) == null ? void 0 : _options$get2.ref;\n      if (!listboxRef.current || !(optionRef != null && optionRef.current)) {\n        return;\n      }\n      const listboxClientRect = listboxRef.current.getBoundingClientRect();\n      const optionClientRect = optionRef.current.getBoundingClientRect();\n      if (optionClientRect.top < listboxClientRect.top) {\n        listboxRef.current.scrollTop -= listboxClientRect.top - optionClientRect.top;\n      } else if (optionClientRect.bottom > listboxClientRect.bottom) {\n        listboxRef.current.scrollTop += optionClientRect.bottom - listboxClientRect.bottom;\n      }\n    }\n  }, [highlightedOption, options]);\n  const getButtonProps = (otherHandlers = {}) => {\n    return _extends({}, getButtonRootProps(_extends({}, otherHandlers, {\n      onClick: createHandleButtonClick(otherHandlers),\n      onMouseDown: createHandleMouseDown(otherHandlers),\n      onKeyDown: createHandleButtonKeyDown(otherHandlers)\n    })), {\n      role: 'combobox',\n      'aria-expanded': open,\n      'aria-haspopup': 'listbox',\n      'aria-controls': listboxId\n    });\n  };\n  const getOptionMetadata = React.useCallback(optionValue => options.get(optionValue), [options]);\n  const getListboxProps = (otherHandlers = {}) => {\n    return _extends({}, getListboxRootProps(_extends({}, otherHandlers, {\n      onKeyUp: createHandleListboxKeyUp(otherHandlers)\n    })), {\n      id: listboxId,\n      role: 'listbox',\n      'aria-multiselectable': multiple ? 'true' : undefined\n    });\n  };\n  React.useDebugValue({\n    selectedOptions,\n    highlightedOption,\n    open\n  });\n  const contextValue = React.useMemo(() => _extends({}, listContextValue, compoundComponentContextValue), [listContextValue, compoundComponentContextValue]);\n  let selectValue;\n  if (props.multiple) {\n    selectValue = selectedOptions;\n  } else {\n    selectValue = selectedOptions.length > 0 ? selectedOptions[0] : null;\n  }\n  return {\n    buttonActive,\n    buttonFocusVisible,\n    buttonRef: mergedButtonRef,\n    contextValue,\n    disabled,\n    dispatch,\n    getButtonProps,\n    getListboxProps,\n    getOptionMetadata,\n    listboxRef: mergedListboxRef,\n    open,\n    options: optionValues,\n    value: selectValue,\n    highlightedOption\n  };\n}\nexport default useSelect;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}