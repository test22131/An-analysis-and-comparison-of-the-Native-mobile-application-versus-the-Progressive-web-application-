{"ast":null,"code":"var _jsxFileName = \"/Users/williamberggren/Documents/pwa/src/components/Gps.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport mapboxgl from 'mapbox-gl';\n\n// Mapbox access token\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmapboxgl.accessToken = 'YOUR_MAPBOX_ACCESS_TOKEN';\nconst MapWithCurrentLocation = () => {\n  _s();\n  const mapContainerRef = useRef(null);\n  useEffect(() => {\n    // Create a new map instance\n    const map = new mapboxgl.Map({\n      container: mapContainerRef.current,\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [-74.5, 40],\n      // Default center\n      zoom: 9 // Default zoom level\n    });\n\n    // Get the user's current location\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        // Set the map's center to the user's location\n        map.setCenter([longitude, latitude]);\n\n        // Create a marker at the user's location\n        new mapboxgl.Marker().setLngLat([longitude, latitude]).addTo(map);\n      }, error => {\n        console.error('Geolocation error:', error);\n      });\n    } else {\n      console.error('Geolocation is not supported in this device/browser.');\n    }\n\n    // Clean up\n    return () => {\n      map.remove();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mapContainerRef,\n    style: {\n      width: '100%',\n      height: '400px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 10\n  }, this);\n};\n_s(MapWithCurrentLocation, \"JDsoK+vCj+KIdyRFXV6E+3zLK1c=\");\n_c = MapWithCurrentLocation;\nexport default MapWithCurrentLocation;\nvar _c;\n$RefreshReg$(_c, \"MapWithCurrentLocation\");","map":{"version":3,"names":["React","useEffect","useRef","mapboxgl","jsxDEV","_jsxDEV","accessToken","MapWithCurrentLocation","_s","mapContainerRef","map","Map","container","current","style","center","zoom","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","setCenter","Marker","setLngLat","addTo","error","console","remove","ref","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/williamberggren/Documents/pwa/src/components/Gps.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport mapboxgl from 'mapbox-gl';\n\n// Mapbox access token\nmapboxgl.accessToken = 'YOUR_MAPBOX_ACCESS_TOKEN';\n\nconst MapWithCurrentLocation = () => {\n  const mapContainerRef = useRef(null);\n\n  useEffect(() => {\n    // Create a new map instance\n    const map = new mapboxgl.Map({\n      container: mapContainerRef.current,\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [-74.5, 40], // Default center\n      zoom: 9, // Default zoom level\n    });\n\n    // Get the user's current location\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const { latitude, longitude } = position.coords;\n          // Set the map's center to the user's location\n          map.setCenter([longitude, latitude]);\n\n          // Create a marker at the user's location\n          new mapboxgl.Marker().setLngLat([longitude, latitude]).addTo(map);\n        },\n        (error) => {\n          console.error('Geolocation error:', error);\n        }\n      );\n    } else {\n      console.error('Geolocation is not supported in this device/browser.');\n    }\n\n    // Clean up\n    return () => {\n      map.remove();\n    };\n  }, []);\n\n  return <div ref={mapContainerRef} style={{ width: '100%', height: '400px' }} />;\n};\n\nexport default MapWithCurrentLocation;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,QAAQ,MAAM,WAAW;;AAEhC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAF,QAAQ,CAACG,WAAW,GAAG,0BAA0B;AAEjD,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAMC,eAAe,GAAGP,MAAM,CAAC,IAAI,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACd;IACA,MAAMS,GAAG,GAAG,IAAIP,QAAQ,CAACQ,GAAG,CAAC;MAC3BC,SAAS,EAAEH,eAAe,CAACI,OAAO;MAClCC,KAAK,EAAE,oCAAoC;MAC3CC,MAAM,EAAE,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC;MAAE;MACrBC,IAAI,EAAE,CAAC,CAAE;IACX,CAAC,CAAC;;IAEF;IACA,IAAI,aAAa,IAAIC,SAAS,EAAE;MAC9BA,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACrCC,QAAQ,IAAK;QACZ,MAAM;UAAEC,QAAQ;UAAEC;QAAU,CAAC,GAAGF,QAAQ,CAACG,MAAM;QAC/C;QACAb,GAAG,CAACc,SAAS,CAAC,CAACF,SAAS,EAAED,QAAQ,CAAC,CAAC;;QAEpC;QACA,IAAIlB,QAAQ,CAACsB,MAAM,CAAC,CAAC,CAACC,SAAS,CAAC,CAACJ,SAAS,EAAED,QAAQ,CAAC,CAAC,CAACM,KAAK,CAACjB,GAAG,CAAC;MACnE,CAAC,EACAkB,KAAK,IAAK;QACTC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC5C,CACF,CAAC;IACH,CAAC,MAAM;MACLC,OAAO,CAACD,KAAK,CAAC,sDAAsD,CAAC;IACvE;;IAEA;IACA,OAAO,MAAM;MACXlB,GAAG,CAACoB,MAAM,CAAC,CAAC;IACd,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOzB,OAAA;IAAK0B,GAAG,EAAEtB,eAAgB;IAACK,KAAK,EAAE;MAAEkB,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAQ;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACjF,CAAC;AAAC7B,EAAA,CAtCID,sBAAsB;AAAA+B,EAAA,GAAtB/B,sBAAsB;AAwC5B,eAAeA,sBAAsB;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}