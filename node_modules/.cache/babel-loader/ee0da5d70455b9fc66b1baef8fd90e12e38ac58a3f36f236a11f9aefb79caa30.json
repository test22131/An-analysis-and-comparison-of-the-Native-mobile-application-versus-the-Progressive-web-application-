{"ast":null,"code":"import { useState as r, useMemo as e, useRef as t, useEffect as n } from \"react\";\nconst o = {};\nfunction s(s, a, l) {\n  const [i, u] = r(o),\n    c = e(s, [s]),\n    f = t(c);\n  return n(() => {\n    f.current = c;\n    let r = r => u(r);\n    return c.onmessage = e => r({\n      result: e.data\n    }), c.onerror = () => r({\n      error: \"error\"\n    }), c.onmessageerror = () => r({\n      error: \"messageerror\"\n    }), () => {\n      r = () => null, c.terminate(), u(o);\n    };\n  }, [c]), n(() => {\n    f.current.postMessage(a, null == l ? void 0 : l());\n  }, [a, l]), i;\n}\nfunction a(r) {\n  function e(r) {\n    if (Object(r) !== r) return Promise.reject(new TypeError(r + \" is not an object.\"));\n    var e = r.done;\n    return Promise.resolve(r.value).then(function (r) {\n      return {\n        value: r,\n        done: e\n      };\n    });\n  }\n  return a = function (r) {\n    this.s = r, this.n = r.next;\n  }, a.prototype = {\n    s: null,\n    n: null,\n    next: function () {\n      return e(this.n.apply(this.s, arguments));\n    },\n    return: function (r) {\n      var t = this.s.return;\n      return void 0 === t ? Promise.resolve({\n        value: r,\n        done: !0\n      }) : e(t.apply(this.s, arguments));\n    },\n    throw: function (r) {\n      var t = this.s.return;\n      return void 0 === t ? Promise.reject(r) : e(t.apply(this.s, arguments));\n    }\n  }, new a(r);\n}\nfunction l(r, e) {\n  self.onmessage = async t => {\n    const n = r(t.data);\n    if (n && n[Symbol.asyncIterator]) {\n      var o,\n        s = !1,\n        l = !1;\n      try {\n        for (var i, u = function (r) {\n            var e,\n              t,\n              n,\n              o = 2;\n            for (\"undefined\" != typeof Symbol && (t = Symbol.asyncIterator, n = Symbol.iterator); o--;) {\n              if (t && null != (e = r[t])) return e.call(r);\n              if (n && null != (e = r[n])) return new a(e.call(r));\n              t = \"@@asyncIterator\", n = \"@@iterator\";\n            }\n            throw new TypeError(\"Object is not async iterable\");\n          }(n); s = !(i = await u.next()).done; s = !1) self.postMessage(i.value, null == e ? void 0 : e());\n      } catch (r) {\n        l = !0, o = r;\n      } finally {\n        try {\n          s && null != u.return && (await u.return());\n        } finally {\n          if (l) throw o;\n        }\n      }\n    } else if (n && n[Symbol.iterator]) for (const r of n) self.postMessage(r, null == e ? void 0 : e());else self.postMessage(await n, null == e ? void 0 : e());\n  };\n}\nexport { l as exposeWorker, s as useWorker };","map":{"version":3,"names":["o","s","a","l","i","u","r","c","e","f","t","n","current","onmessage","result","data","onerror","error","onmessageerror","setStateSafe","terminate","postMessage","Object","Promise","reject","TypeError","done","resolve","value","then","next","prototype","apply","arguments","return","throw","self","Symbol","asyncIterator","iterator","call","exposeWorker","useWorker"],"sources":["/Users/williamberggren/Documents/pwa/node_modules/react-hooks-worker/src/useWorker.ts","/Users/williamberggren/Documents/pwa/node_modules/react-hooks-worker/src/exposeWorker.ts"],"sourcesContent":["import {\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\n\ntype State<Result> = {\n  result?: Result;\n  error?: 'error' | 'messageerror';\n};\n\nconst initialState = {};\n\n/**\n * use worker\n *\n * The createWorker function should be stable to keep the worker running.\n * If it's referentially changed, it will create a new worker and terminate the old one.\n *\n * @example\n *\n * import { useWorker } from 'react-hooks-worker';\n *\n * const createWorker = () => new Worker(new URL('./slow_fib.worker', import.meta.url));\n *\n * const CalcFib = ({ count }) => {\n *   const { result, error } = useWorker(createWorker, count);\n *   if (error) return <div>Error: {error}</div>;\n *   return <div>Result: {result}</div>;\n * };\n */\nexport function useWorker<Input, Result>(\n  createWorker: () => Worker,\n  input: Input,\n  getOptions?: () => WindowPostMessageOptions,\n) {\n  const [state, setState] = useState<State<Result>>(initialState);\n  const worker = useMemo(createWorker, [createWorker]);\n  const lastWorker = useRef<Worker>(worker);\n  useEffect(() => {\n    lastWorker.current = worker;\n    let setStateSafe = (nextState: State<Result>) => setState(nextState);\n    worker.onmessage = (e) => setStateSafe({ result: e.data });\n    worker.onerror = () => setStateSafe({ error: 'error' });\n    worker.onmessageerror = () => setStateSafe({ error: 'messageerror' });\n    const cleanup = () => {\n      // eslint-disable-next-line react/function-component-definition\n      setStateSafe = () => null; // we should not setState after cleanup.\n      worker.terminate();\n      setState(initialState);\n    };\n    return cleanup;\n  }, [worker]);\n  useEffect(() => {\n    lastWorker.current.postMessage(input, getOptions?.());\n  }, [input, getOptions]);\n  return state;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * expose worker\n *\n * You can expose any function that returns:\n * - A value\n * - A promise\n * - An iterable\n * - An async iterable\n *\n * @example\n *\n * import { exposeWorker } from 'react-hooks-worker';\n *\n * const fib = (i) => (i <= 1 ? i : fib(i - 1) + fib(i - 2));\n *\n * exposeWorker(fib);\n */\nexport function exposeWorker(\n  func: (data: any) => any,\n  getOptions?: () => WindowPostMessageOptions,\n) {\n  self.onmessage = async (e: MessageEvent) => {\n    const r = func(e.data);\n    if (r && r[Symbol.asyncIterator]) {\n      for await (const i of r) (self.postMessage)(i, getOptions?.());\n    } else if (r && r[Symbol.iterator]) {\n      for (const i of r) (self.postMessage)(i, getOptions?.());\n    } else {\n      (self.postMessage)(await r, getOptions?.());\n    }\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}