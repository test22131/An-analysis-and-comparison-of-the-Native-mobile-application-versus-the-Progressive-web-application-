{"ast":null,"code":"var _jsxFileName = \"/Users/williamberggren/Documents/pwa/src/components/Contacts.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Papa from \"papaparse\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Contacts() {\n  _s();\n  const [contacts, setContacts] = useState([]);\n  const [duplicatedContacts, setDuplicatedContacts] = useState([]);\n  const handleFileUpload = e => {\n    const file = e.target.files[0];\n    if (file) {\n      Papa.parse(file, {\n        header: true,\n        complete: results => {\n          setContacts(results.data);\n        },\n        error: error => {\n          console.error(\"Error parsing CSV file:\", error);\n        }\n      });\n    }\n  };\n  const handleDuplicateContacts = function () {\n    let numberOfDuplicates = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    const duplicates = [];\n    for (let i = 0; i < numberOfDuplicates; i++) {\n      duplicates.push(...contacts);\n    }\n    setDuplicatedContacts(shuffleArray(duplicates));\n  };\n  const shuffleArray = array => {\n    const shuffled = [...array];\n    for (let i = shuffled.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n    }\n    return shuffled;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Contacts\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Contact Importer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleDuplicateContacts(2),\n      children: \"Duplicate and Shuffle Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Original Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: contacts.map((contact, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: contact.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Duplicated and Shuffled Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: duplicatedContacts.map((contact, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: contact.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(Contacts, \"TOAzrpncF7+eYfa2RyLav72KTHM=\");\n_c = Contacts;\nexport default Contacts;\nvar _c;\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"names":["React","useState","Papa","jsxDEV","_jsxDEV","Contacts","_s","contacts","setContacts","duplicatedContacts","setDuplicatedContacts","handleFileUpload","e","file","target","files","parse","header","complete","results","data","error","console","handleDuplicateContacts","numberOfDuplicates","arguments","length","undefined","duplicates","i","push","shuffleArray","array","shuffled","j","Math","floor","random","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","map","contact","index","name","_c","$RefreshReg$"],"sources":["/Users/williamberggren/Documents/pwa/src/components/Contacts.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Papa from \"papaparse\";\n\nfunction Contacts() {\n  const [contacts, setContacts] = useState([]);\n  const [duplicatedContacts, setDuplicatedContacts] = useState([]);\n\n  const handleFileUpload = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      Papa.parse(file, {\n        header: true,\n        complete: (results) => {\n          setContacts(results.data);\n        },\n        error: (error) => {\n          console.error(\"Error parsing CSV file:\", error);\n        },\n      });\n    }\n  };\n\n  const handleDuplicateContacts = (numberOfDuplicates = 1) => {\n    const duplicates = [];\n\n    for (let i = 0; i < numberOfDuplicates; i++) {\n      duplicates.push(...contacts);\n    }\n\n    setDuplicatedContacts(shuffleArray(duplicates));\n  };\n\n  const shuffleArray = (array) => {\n    const shuffled = [...array];\n    for (let i = shuffled.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n    }\n    return shuffled;\n  };\n\n  return (\n    <div className=\"Contacts\">\n      <h1>Contact Importer</h1>\n      <input type=\"file\" onChange={handleFileUpload} />\n      <button onClick={() => handleDuplicateContacts(2)}>\n        Duplicate and Shuffle Contacts\n      </button>\n\n      <h2>Original Contacts</h2>\n      <ul>\n        {contacts.map((contact, index) => (\n          <li key={index}>{contact.name}</li>\n        ))}\n      </ul>\n\n      <h2>Duplicated and Shuffled Contacts</h2>\n      <ul>\n        {duplicatedContacts.map((contact, index) => (\n          <li key={index}>{contact.name}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Contacts;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}