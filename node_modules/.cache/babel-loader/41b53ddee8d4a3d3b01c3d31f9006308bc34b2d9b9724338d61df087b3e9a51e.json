{"ast":null,"code":"var _jsxFileName = \"/Users/williamberggren/Documents/pwa/src/components/Contacts.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styles from './Contacts.module.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Contacts() {\n  _s();\n  const [contacts, setContacts] = useState([]);\n  const [newContactName, setNewContactName] = useState('');\n  const addContact = () => {\n    if (newContactName.trim() === '') {\n      alert('Please enter a contact name.');\n      return;\n    }\n    const newContact = {\n      id: uuidv4(),\n      name: newContactName\n    };\n    setContacts(prevContacts => [...prevContacts, newContact]);\n    setNewContactName('');\n  };\n  const deleteContact = id => {\n    setContacts(prevContacts => prevContacts.filter(contact => contact.id !== id));\n  };\n  const duplicateContacts = () => {\n    if (contacts.length === 0) {\n      alert('No contacts to duplicate.');\n      return;\n    }\n    const duplicatedContacts = [];\n    for (let i = 0; i < 10000; i++) {\n      const duplicatedContact = {\n        id: uuidv4(),\n        name: newContactName\n      };\n      duplicatedContacts.push(duplicatedContact);\n    }\n    setContacts(prevContacts => [...prevContacts, ...duplicatedContacts]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.contacts,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: styles.title,\n      children: \"Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.addContactContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: styles.addContactInput,\n        type: \"text\",\n        placeholder: \"Enter contact name\",\n        value: newContactName,\n        onChange: e => setNewContactName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.addContactButton,\n        onClick: addContact,\n        children: \"Add Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.duplicateButton,\n        onClick: duplicateContacts,\n        children: \"Duplicate Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.contactList,\n      children: [contacts.map(contact => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: styles.contactItem,\n        children: [contact.name, ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.deleteButton,\n          onClick: () => deleteContact(contact.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, contact.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)), contacts.length > 0 && /*#__PURE__*/_jsxDEV(\"li\", {\n        className: styles.contactItem,\n        children: [\"Duplicated Contacts:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: contacts.slice(-10000).map(contact => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: contact.name\n          }, contact.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(Contacts, \"RZWg/5tRFF395CUJEvyX78umHzo=\");\n_c = Contacts;\nexport default Contacts;\nvar _c;\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"names":["React","useState","styles","v4","uuidv4","jsxDEV","_jsxDEV","Contacts","_s","contacts","setContacts","newContactName","setNewContactName","addContact","trim","alert","newContact","id","name","prevContacts","deleteContact","filter","contact","duplicateContacts","length","duplicatedContacts","i","duplicatedContact","push","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","addContactContainer","addContactInput","type","placeholder","value","onChange","e","target","addContactButton","onClick","duplicateButton","contactList","map","contactItem","deleteButton","slice","_c","$RefreshReg$"],"sources":["/Users/williamberggren/Documents/pwa/src/components/Contacts.js"],"sourcesContent":["import React, { useState } from 'react';\nimport styles from './Contacts.module.css';\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction Contacts() {\n  const [contacts, setContacts] = useState([]);\n  const [newContactName, setNewContactName] = useState('');\n\n  const addContact = () => {\n    if (newContactName.trim() === '') {\n      alert('Please enter a contact name.');\n      return;\n    }\n\n    const newContact = {\n      id: uuidv4(),\n      name: newContactName,\n    };\n\n    setContacts((prevContacts) => [...prevContacts, newContact]);\n    setNewContactName('');\n  };\n\n  const deleteContact = (id) => {\n    setContacts((prevContacts) => prevContacts.filter((contact) => contact.id !== id));\n  };\n\n  const duplicateContacts = () => {\n    if (contacts.length === 0) {\n      alert('No contacts to duplicate.');\n      return;\n    }\n\n    const duplicatedContacts = [];\n\n    for (let i = 0; i < 10000; i++) {\n      const duplicatedContact = {\n        id: uuidv4(),\n        name: newContactName,\n      };\n\n      duplicatedContacts.push(duplicatedContact);\n    }\n\n    setContacts((prevContacts) => [...prevContacts, ...duplicatedContacts]);\n  };\n\n  return (\n    <div className={styles.contacts}>\n      <h1 className={styles.title}>Contacts</h1>\n      <div className={styles.addContactContainer}>\n        <input\n          className={styles.addContactInput}\n          type=\"text\"\n          placeholder=\"Enter contact name\"\n          value={newContactName}\n          onChange={(e) => setNewContactName(e.target.value)}\n        />\n        <button className={styles.addContactButton} onClick={addContact}>\n          Add Contact\n        </button>\n        <button className={styles.duplicateButton} onClick={duplicateContacts}>\n          Duplicate Contacts\n        </button>\n      </div>\n      <ul className={styles.contactList}>\n        {contacts.map((contact) => (\n          <li key={contact.id} className={styles.contactItem}>\n            {contact.name}{' '}\n            <button className={styles.deleteButton} onClick={() => deleteContact(contact.id)}>\n              Delete\n            </button>\n          </li>\n        ))}\n        {contacts.length > 0 && (\n          <li className={styles.contactItem}>\n            Duplicated Contacts:\n            <ul>\n              {contacts.slice(-10000).map((contact) => (\n                <li key={contact.id}>{contact.name}</li>\n              ))}\n            </ul>\n          </li>\n        )}\n      </ul>\n    </div>\n  );\n}\n\nexport default Contacts;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}