{"ast":null,"code":"var _jsxFileName = \"/Users/williamberggren/Documents/pwa/src/components/PhoneInCall.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styles from './PhoneInCall.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PhoneInCall() {\n  _s();\n  const [isInCall, setIsInCall] = useState(false);\n\n  // Mock function to change call state\n  const toggleCallStatus = () => setIsInCall(!isInCall);\n  useEffect(() => {\n    async function checkInCallStatus() {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          audio: true\n        });\n        const tracks = stream.getTracks();\n        const isAudioInUse = tracks.some(track => track.kind === 'audio' && track.readyState === 'live');\n        const isVideoInUse = tracks.some(track => track.kind === 'video' && track.readyState === 'live');\n        setIsInCall(isAudioInUse && !isVideoInUse);\n        tracks.forEach(track => track.stop());\n      } catch (error) {\n        setIsInCall(false);\n      }\n    }\n    checkInCallStatus();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"phone-icon.png\",\n      alt: \"Phone Icon\",\n      className: styles.phoneIcon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: styles.callStatus,\n      children: isInCall ? 'The device is in call' : 'The device is not in call'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.toggleButton,\n      onClick: toggleCallStatus,\n      children: \"Toggle Call Status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(PhoneInCall, \"vp8HZW92Se/jSeU83pMhyLcaKvY=\");\n_c = PhoneInCall;\nexport default PhoneInCall;\nvar _c;\n$RefreshReg$(_c, \"PhoneInCall\");","map":{"version":3,"names":["React","useState","useEffect","styles","jsxDEV","_jsxDEV","PhoneInCall","_s","isInCall","setIsInCall","toggleCallStatus","checkInCallStatus","stream","navigator","mediaDevices","getUserMedia","audio","tracks","getTracks","isAudioInUse","some","track","kind","readyState","isVideoInUse","forEach","stop","error","className","container","children","src","alt","phoneIcon","fileName","_jsxFileName","lineNumber","columnNumber","callStatus","toggleButton","onClick","_c","$RefreshReg$"],"sources":["/Users/williamberggren/Documents/pwa/src/components/PhoneInCall.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styles from './PhoneInCall.module.css';\n\nfunction PhoneInCall() {\n    const [isInCall, setIsInCall] = useState(false);\n\n    // Mock function to change call state\n    const toggleCallStatus = () => setIsInCall(!isInCall);\n\n    useEffect(() => {\n        async function checkInCallStatus() {\n            try {\n                const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n                const tracks = stream.getTracks();\n                const isAudioInUse = tracks.some(track => track.kind === 'audio' && track.readyState === 'live');\n                const isVideoInUse = tracks.some(track => track.kind === 'video' && track.readyState === 'live');\n                setIsInCall(isAudioInUse && !isVideoInUse);\n                tracks.forEach(track => track.stop());\n            } catch (error) {\n                setIsInCall(false);\n            }\n        }\n\n        checkInCallStatus();\n    }, []);\n\n    return (\n        <div className={styles.container}>\n            <img \n                src=\"phone-icon.png\" \n                alt=\"Phone Icon\" \n                className={styles.phoneIcon}\n            />\n            <h2 className={styles.callStatus}>\n                {isInCall ? 'The device is in call' : 'The device is not in call'}\n            </h2>\n            <button className={styles.toggleButton} onClick={toggleCallStatus}>Toggle Call Status</button>\n        </div>\n    );\n}\n\nexport default PhoneInCall;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;;EAE/C;EACA,MAAMS,gBAAgB,GAAGA,CAAA,KAAMD,WAAW,CAAC,CAACD,QAAQ,CAAC;EAErDN,SAAS,CAAC,MAAM;IACZ,eAAeS,iBAAiBA,CAAA,EAAG;MAC/B,IAAI;QACA,MAAMC,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;UAAEC,KAAK,EAAE;QAAK,CAAC,CAAC;QACzE,MAAMC,MAAM,GAAGL,MAAM,CAACM,SAAS,CAAC,CAAC;QACjC,MAAMC,YAAY,GAAGF,MAAM,CAACG,IAAI,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,KAAK,OAAO,IAAID,KAAK,CAACE,UAAU,KAAK,MAAM,CAAC;QAChG,MAAMC,YAAY,GAAGP,MAAM,CAACG,IAAI,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,KAAK,OAAO,IAAID,KAAK,CAACE,UAAU,KAAK,MAAM,CAAC;QAChGd,WAAW,CAACU,YAAY,IAAI,CAACK,YAAY,CAAC;QAC1CP,MAAM,CAACQ,OAAO,CAACJ,KAAK,IAAIA,KAAK,CAACK,IAAI,CAAC,CAAC,CAAC;MACzC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZlB,WAAW,CAAC,KAAK,CAAC;MACtB;IACJ;IAEAE,iBAAiB,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIN,OAAA;IAAKuB,SAAS,EAAEzB,MAAM,CAAC0B,SAAU;IAAAC,QAAA,gBAC7BzB,OAAA;MACI0B,GAAG,EAAC,gBAAgB;MACpBC,GAAG,EAAC,YAAY;MAChBJ,SAAS,EAAEzB,MAAM,CAAC8B;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eACFhC,OAAA;MAAIuB,SAAS,EAAEzB,MAAM,CAACmC,UAAW;MAAAR,QAAA,EAC5BtB,QAAQ,GAAG,uBAAuB,GAAG;IAA2B;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjE,CAAC,eACLhC,OAAA;MAAQuB,SAAS,EAAEzB,MAAM,CAACoC,YAAa;MAACC,OAAO,EAAE9B,gBAAiB;MAAAoB,QAAA,EAAC;IAAkB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7F,CAAC;AAEd;AAAC9B,EAAA,CApCQD,WAAW;AAAAmC,EAAA,GAAXnC,WAAW;AAsCpB,eAAeA,WAAW;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}