{"ast":null,"code":"var _jsxFileName = \"/Users/williamberggren/Documents/pwa/src/components/Camera.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Camera = () => {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [images, setImages] = useState([]);\n  useEffect(() => {\n    const startVideo = async () => {\n      try {\n        const constraints = {\n          video: true\n        };\n        const stream = await navigator.mediaDevices.getUserMedia(constraints);\n        if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n        }\n      } catch (err) {\n        console.error('Error accessing camera: ', err);\n      }\n    };\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      startVideo();\n    } else {\n      console.error('getUserMedia not supported in this browser');\n    }\n    return () => {\n      if (videoRef.current && videoRef.current.srcObject) {\n        videoRef.current.srcObject.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, []);\n  const captureImage = () => {\n    if (videoRef.current) {\n      const canvas = canvasRef.current;\n      canvas.width = videoRef.current.videoWidth;\n      canvas.height = videoRef.current.videoHeight;\n      canvas.getContext('2d').drawImage(videoRef.current, 0, 0, canvas.width, canvas.height);\n      const imageSrc = canvas.toDataURL('image/jpeg');\n      const newImages = [...images, imageSrc];\n      localStorage.setItem('images', JSON.stringify(newImages));\n      setImages(newImages);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Camera\",\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      autoPlay: true,\n      playsInline: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: captureImage,\n      children: \"Capture Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/gallery\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"View Gallery\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(Camera, \"Ln+wnOtMglelPg2SYiozFqbPkJA=\");\n_c = Camera;\nexport default Camera;\nvar _c;\n$RefreshReg$(_c, \"Camera\");","map":{"version":3,"names":["React","useRef","useEffect","useState","Link","jsxDEV","_jsxDEV","Camera","_s","videoRef","canvasRef","images","setImages","startVideo","constraints","video","stream","navigator","mediaDevices","getUserMedia","current","srcObject","err","console","error","getTracks","forEach","track","stop","captureImage","canvas","width","videoWidth","height","videoHeight","getContext","drawImage","imageSrc","toDataURL","newImages","localStorage","setItem","JSON","stringify","className","children","ref","autoPlay","playsInline","fileName","_jsxFileName","lineNumber","columnNumber","onClick","to","style","display","_c","$RefreshReg$"],"sources":["/Users/williamberggren/Documents/pwa/src/components/Camera.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Camera = () => {\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [images, setImages] = useState([]);\n\n  useEffect(() => {\n    const startVideo = async () => {\n      try {\n        const constraints = { video: true };\n        const stream = await navigator.mediaDevices.getUserMedia(constraints);\n        if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n        }\n      } catch (err) {\n        console.error('Error accessing camera: ', err);\n      }\n    };\n\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      startVideo();\n    } else {\n      console.error('getUserMedia not supported in this browser');\n    }\n\n    return () => {\n      if (videoRef.current && videoRef.current.srcObject) {\n        videoRef.current.srcObject.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, []);\n\n  const captureImage = () => {\n    if (videoRef.current) {\n      const canvas = canvasRef.current;\n      canvas.width = videoRef.current.videoWidth;\n      canvas.height = videoRef.current.videoHeight;\n      canvas.getContext('2d').drawImage(videoRef.current, 0, 0, canvas.width, canvas.height);\n      const imageSrc = canvas.toDataURL('image/jpeg');\n      const newImages = [...images, imageSrc];\n      localStorage.setItem('images', JSON.stringify(newImages));\n      setImages(newImages);\n    }\n  };\n\n  return (\n    <div className=\"Camera\">\n      <video ref={videoRef} autoPlay playsInline />\n      <button onClick={captureImage}>Capture Image</button>\n      <Link to=\"/gallery\">\n        <button>View Gallery</button>\n      </Link>\n      <canvas ref={canvasRef} style={{ display: 'none' }} />\n    </div>\n  );\n};\n\nexport default Camera;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}