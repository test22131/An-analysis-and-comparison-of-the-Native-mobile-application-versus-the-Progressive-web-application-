{"ast":null,"code":"onmessage = function (e) {\n  const [messageType, contacts] = e.data;\n  switch (messageType) {\n    case 'duplicate':\n      postMessage(duplicateContacts(contacts));\n      break;\n    case 'sort':\n      postMessage(sortContacts(contacts));\n      break;\n    default:\n      console.error('Unknown message type in worker', messageType);\n  }\n};\nfunction duplicateContacts(contacts) {\n  const duplicatedContacts = [];\n  while (duplicatedContacts.length < 10000) {\n    duplicatedContacts.push(...contacts.map(contact => ({\n      ...contact,\n      id: contact.id\n    })));\n  }\n  return duplicatedContacts;\n}\nfunction sortContacts(contacts) {\n  return contacts.sort((a, b) => a.name.localeCompare(b.name));\n}","map":{"version":3,"names":["onmessage","e","messageType","contacts","data","postMessage","duplicateContacts","sortContacts","console","error","duplicatedContacts","length","push","map","contact","id","sort","a","b","name","localeCompare"],"sources":["/Users/williamberggren/Documents/pwa/src/components/contactWorker.js"],"sourcesContent":["onmessage = function(e) {\n    const [messageType, contacts] = e.data;\n  \n    switch (messageType) {\n      case 'duplicate':\n        postMessage(duplicateContacts(contacts));\n        break;\n      case 'sort':\n        postMessage(sortContacts(contacts));\n        break;\n      default:\n        console.error('Unknown message type in worker', messageType);\n    }\n  }\n  \n  function duplicateContacts(contacts) {\n    const duplicatedContacts = [];\n    while (duplicatedContacts.length < 10000) {\n      duplicatedContacts.push(...contacts.map((contact) => ({ ...contact, id: contact.id })));\n    }\n    return duplicatedContacts;\n  }\n  \n  function sortContacts(contacts) {\n    return contacts.sort((a, b) => a.name.localeCompare(b.name));\n  }\n  "],"mappings":"AAAAA,SAAS,GAAG,SAAAA,CAASC,CAAC,EAAE;EACpB,MAAM,CAACC,WAAW,EAAEC,QAAQ,CAAC,GAAGF,CAAC,CAACG,IAAI;EAEtC,QAAQF,WAAW;IACjB,KAAK,WAAW;MACdG,WAAW,CAACC,iBAAiB,CAACH,QAAQ,CAAC,CAAC;MACxC;IACF,KAAK,MAAM;MACTE,WAAW,CAACE,YAAY,CAACJ,QAAQ,CAAC,CAAC;MACnC;IACF;MACEK,OAAO,CAACC,KAAK,CAAC,gCAAgC,EAAEP,WAAW,CAAC;EAChE;AACF,CAAC;AAED,SAASI,iBAAiBA,CAACH,QAAQ,EAAE;EACnC,MAAMO,kBAAkB,GAAG,EAAE;EAC7B,OAAOA,kBAAkB,CAACC,MAAM,GAAG,KAAK,EAAE;IACxCD,kBAAkB,CAACE,IAAI,CAAC,GAAGT,QAAQ,CAACU,GAAG,CAAEC,OAAO,KAAM;MAAE,GAAGA,OAAO;MAAEC,EAAE,EAAED,OAAO,CAACC;IAAG,CAAC,CAAC,CAAC,CAAC;EACzF;EACA,OAAOL,kBAAkB;AAC3B;AAEA,SAASH,YAAYA,CAACJ,QAAQ,EAAE;EAC9B,OAAOA,QAAQ,CAACa,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,IAAI,CAACC,aAAa,CAACF,CAAC,CAACC,IAAI,CAAC,CAAC;AAC9D"},"metadata":{},"sourceType":"module","externalDependencies":[]}