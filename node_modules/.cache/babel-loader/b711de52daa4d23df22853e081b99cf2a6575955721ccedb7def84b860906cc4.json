{"ast":null,"code":"import _regeneratorRuntime from\"/Users/williamberggren/Documents/pwa/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/williamberggren/Documents/pwa/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _toConsumableArray from\"/Users/williamberggren/Documents/pwa/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/williamberggren/Documents/pwa/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import styles from'./Contacts.module.css';import{v4 as uuidv4}from'uuid';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Contacts(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),contacts=_useState2[0],setContacts=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),newContactName=_useState4[0],setNewContactName=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),showAddContact=_useState6[0],setShowAddContact=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),showNewContactForm=_useState8[0],setShowNewContactForm=_useState8[1];useEffect(function(){fetch('/contacts.json').then(function(response){return response.json();}).then(function(data){return setContacts(data);}).catch(function(error){return console.error('Error fetching contacts:',error);});},[]);var deleteContact=function deleteContact(index){var updatedContacts=contacts.filter(function(_,i){return i!==index;});setContacts(updatedContacts);};var addContact=function addContact(){if(newContactName.trim()===''){alert('Please enter a contact name.');return;}var newContact={id:uuidv4(),name:newContactName,email:'',phone:''};setContacts([newContact].concat(_toConsumableArray(contacts)));setNewContactName('');setShowAddContact(false);};var cancelAddContact=function cancelAddContact(){setShowAddContact(false);setNewContactName('');};function fetchContactsFromDevice(){return _fetchContactsFromDevice.apply(this,arguments);}function _fetchContactsFromDevice(){_fetchContactsFromDevice=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var deviceContacts,formattedContacts;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:if(!('contacts'in navigator&&'ContactsManager'in window)){_context.next=14;break;}_context.prev=1;_context.next=4;return navigator.contacts.select(['name','email','tel'],{multiple:true});case 4:deviceContacts=_context.sent;formattedContacts=deviceContacts.map(function(contact){return{id:uuidv4(),name:contact.name[0],email:contact.email?contact.email[0]:'',phone:contact.tel?contact.tel[0]:''};});setContacts(function(prevContacts){return[].concat(_toConsumableArray(prevContacts),_toConsumableArray(formattedContacts));});_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](1);console.error('Error selecting contacts:',_context.t0);case 12:_context.next=15;break;case 14:console.error('Contact Picker API not supported.');case 15:case\"end\":return _context.stop();}},_callee,null,[[1,9]]);}));return _fetchContactsFromDevice.apply(this,arguments);}return/*#__PURE__*/_jsxs(\"div\",{className:styles.contacts,children:[/*#__PURE__*/_jsx(\"h1\",{className:styles.title,children:\"Contacts\"}),/*#__PURE__*/_jsx(\"div\",{className:styles.addContactContainer,children:showAddContact?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{className:styles.addContactInput,type:\"text\",placeholder:\"Enter contact name\",value:newContactName,onChange:function onChange(e){return setNewContactName(e.target.value);}}),/*#__PURE__*/_jsx(\"button\",{className:styles.addContactButton,onClick:addContact,children:\"Confirm\"}),/*#__PURE__*/_jsx(\"button\",{className:styles.cancelButton,onClick:cancelAddContact,children:\"Cancel\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{className:styles.addButton,onClick:function onClick(){return setShowAddContact(true);},children:\"Add Contact\"}),/*#__PURE__*/_jsx(\"button\",{className:styles.addButton,onClick:fetchContactsFromDevice,children:\"Fetch Contacts\"})]})}),/*#__PURE__*/_jsx(\"ul\",{className:styles.contactList,children:contacts.map(function(contact,index){return/*#__PURE__*/_jsxs(\"li\",{className:styles.contactItem,children:[contact.name,' ',/*#__PURE__*/_jsx(\"button\",{className:styles.deleteButton,onClick:function onClick(){return deleteContact(index);},children:\"Delete\"})]},index);})})]});}export default Contacts;","map":{"version":3,"names":["React","useState","useEffect","styles","v4","uuidv4","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Contacts","_useState","_useState2","_slicedToArray","contacts","setContacts","_useState3","_useState4","newContactName","setNewContactName","_useState5","_useState6","showAddContact","setShowAddContact","_useState7","_useState8","showNewContactForm","setShowNewContactForm","fetch","then","response","json","data","catch","error","console","deleteContact","index","updatedContacts","filter","_","i","addContact","trim","alert","newContact","id","name","email","phone","concat","_toConsumableArray","cancelAddContact","fetchContactsFromDevice","_fetchContactsFromDevice","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","deviceContacts","formattedContacts","wrap","_callee$","_context","prev","next","navigator","window","select","multiple","sent","map","contact","tel","prevContacts","t0","stop","className","children","title","addContactContainer","addContactInput","type","placeholder","value","onChange","e","target","addContactButton","onClick","cancelButton","addButton","contactList","contactItem","deleteButton"],"sources":["/Users/williamberggren/Documents/pwa/src/components/Contacts.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styles from './Contacts.module.css';\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction Contacts() {\n  const [contacts, setContacts] = useState([]);\n  const [newContactName, setNewContactName] = useState('');\n  const [showAddContact, setShowAddContact] = useState(false);\n  const [showNewContactForm, setShowNewContactForm] = useState(false);\n\n  useEffect(() => {\n    fetch('/contacts.json')\n      .then((response) => response.json())\n      .then((data) => setContacts(data))\n      .catch((error) => console.error('Error fetching contacts:', error));\n  }, []);\n\n  const deleteContact = (index) => {\n    const updatedContacts = contacts.filter((_, i) => i !== index);\n    setContacts(updatedContacts);\n  };\n\n  const addContact = () => {\n    if (newContactName.trim() === '') {\n      alert('Please enter a contact name.');\n      return;\n    }\n\n    const newContact = {\n      id: uuidv4(),\n      name: newContactName,\n      email: '',\n      phone: '',\n    };\n\n    setContacts([newContact, ...contacts]);\n    setNewContactName('');\n    setShowAddContact(false);\n  };\n\n  const cancelAddContact = () => {\n    setShowAddContact(false);\n    setNewContactName('');\n  };\n\n  async function fetchContactsFromDevice() {\n    if ('contacts' in navigator && 'ContactsManager' in window) {\n      try {\n        const deviceContacts = await navigator.contacts.select(['name', 'email', 'tel'], {multiple: true});\n        const formattedContacts = deviceContacts.map(contact => ({\n          id: uuidv4(),\n          name: contact.name[0],\n          email: contact.email ? contact.email[0] : '',\n          phone: contact.tel ? contact.tel[0] : '',\n        }));\n        setContacts(prevContacts => [...prevContacts, ...formattedContacts]);\n      } catch (error) {\n        console.error('Error selecting contacts:', error);\n      }\n    } else {\n      console.error('Contact Picker API not supported.');\n    }\n  }\n\n  return (\n    <div className={styles.contacts}>\n      <h1 className={styles.title}>Contacts</h1>\n      <div className={styles.addContactContainer}>\n        {showAddContact ? (\n          <>\n            <input\n              className={styles.addContactInput}\n              type=\"text\"\n              placeholder=\"Enter contact name\"\n              value={newContactName}\n              onChange={(e) => setNewContactName(e.target.value)}\n            />\n            <button className={styles.addContactButton} onClick={addContact}>\n              Confirm\n            </button>\n            <button className={styles.cancelButton} onClick={cancelAddContact}>\n              Cancel\n            </button>\n          </>\n        ) : (\n          <>\n            <button className={styles.addButton} onClick={() => setShowAddContact(true)}>\n              Add Contact\n            </button>\n            <button className={styles.addButton} onClick={fetchContactsFromDevice}>\n              Fetch Contacts\n            </button>\n          </>\n        )}\n      </div>\n      <ul className={styles.contactList}>\n        {contacts.map((contact, index) => (\n          <li key={index} className={styles.contactItem}>\n            {contact.name}{' '}\n            <button className={styles.deleteButton} onClick={() => deleteContact(index)}>\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Contacts;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}