{"ast":null,"code":"var _jsxFileName = \"/Users/williamberggren/Documents/pwa/src/components/Contacts.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styles from './Contacts.module.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Contacts() {\n  _s();\n  const [contacts, setContacts] = useState([]);\n  const [newContactName, setNewContactName] = useState('');\n  const addContact = () => {\n    if (newContactName.trim() === '') {\n      alert('Please enter a contact name.');\n      return;\n    }\n    const newContact = {\n      id: uuidv4(),\n      name: newContactName\n    };\n    setContacts(prevContacts => [...prevContacts, newContact]);\n    setNewContactName('');\n  };\n  const deleteContact = id => {\n    setContacts(prevContacts => prevContacts.filter(contact => contact.id !== id));\n  };\n  const {\n    worker: duplicateWorker,\n    result: duplicatedContacts\n  } = createWorker(duplicateContacts);\n  const {\n    worker: sortWorker,\n    result: sortedContacts\n  } = createWorker(sortContacts);\n  useEffect(() => {\n    if (duplicatedContacts) {\n      setContacts(prevContacts => [...prevContacts, ...duplicatedContacts]);\n    }\n  }, [duplicatedContacts]);\n  useEffect(() => {\n    if (sortedContacts) {\n      setContacts(sortedContacts);\n    }\n  }, [sortedContacts]);\n  const duplicateContactsHandler = () => {\n    duplicateWorker(contacts);\n  };\n  const sortContactsHandler = () => {\n    sortWorker(contacts);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.contacts,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: styles.title,\n      children: \"Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.addContactContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: styles.contactNameInput,\n        type: \"text\",\n        placeholder: \"Enter contact name\",\n        value: newContactName,\n        onChange: e => setNewContactName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.addContactButton,\n        onClick: addContact,\n        children: \"Add Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        \"data-testid\": \"duplicateContactsButton\",\n        className: styles.duplicateButton,\n        onClick: duplicateContacts,\n        children: \"Duplicate Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.sortButton,\n      onClick: sortContacts,\n      children: \"Sort Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.contactList,\n      children: contacts.map(contact => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: styles.contactItem,\n        \"data-testid\": \"contactItem\",\n        children: [contact.name, ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.deleteButton,\n          onClick: () => deleteContact(contact.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, contact.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(Contacts, \"61gnAjXjn1ArgN09lU7rRfQRlc8=\");\n_c = Contacts;\nexport default Contacts;\nvar _c;\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"names":["React","useState","styles","v4","uuidv4","jsxDEV","_jsxDEV","Contacts","_s","contacts","setContacts","newContactName","setNewContactName","addContact","trim","alert","newContact","id","name","prevContacts","deleteContact","filter","contact","worker","duplicateWorker","result","duplicatedContacts","createWorker","duplicateContacts","sortWorker","sortedContacts","sortContacts","useEffect","duplicateContactsHandler","sortContactsHandler","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","addContactContainer","contactNameInput","type","placeholder","value","onChange","e","target","addContactButton","onClick","duplicateButton","sortButton","contactList","map","contactItem","deleteButton","_c","$RefreshReg$"],"sources":["/Users/williamberggren/Documents/pwa/src/components/Contacts.js"],"sourcesContent":["import React, { useState } from 'react';\nimport styles from './Contacts.module.css';\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction Contacts() {\n  const [contacts, setContacts] = useState([]);\n  const [newContactName, setNewContactName] = useState('');\n\n  const addContact = () => {\n    if (newContactName.trim() === '') {\n      alert('Please enter a contact name.');\n      return;\n    }\n\n    const newContact = {\n      id: uuidv4(),\n      name: newContactName,\n    };\n\n    setContacts((prevContacts) => [...prevContacts, newContact]);\n    setNewContactName('');\n  };\n\n  const deleteContact = (id) => {\n    setContacts((prevContacts) => prevContacts.filter((contact) => contact.id !== id));\n  };\n\n  const { worker: duplicateWorker, result: duplicatedContacts } = createWorker(duplicateContacts);\n  const { worker: sortWorker, result: sortedContacts } = createWorker(sortContacts);\n\n  useEffect(() => {\n    if (duplicatedContacts) {\n      setContacts((prevContacts) => [...prevContacts, ...duplicatedContacts]);\n    }\n  }, [duplicatedContacts]);\n\n  useEffect(() => {\n    if (sortedContacts) {\n      setContacts(sortedContacts);\n    }\n  }, [sortedContacts]);\n\n  const duplicateContactsHandler = () => {\n    duplicateWorker(contacts);\n  };\n\n  const sortContactsHandler = () => {\n    sortWorker(contacts);\n  };\n\n  return (\n    <div className={styles.contacts}>\n      <h1 className={styles.title}>Contacts</h1>\n      <div className={styles.addContactContainer}>\n        <input\n          className={styles.contactNameInput}\n          type=\"text\"\n          placeholder=\"Enter contact name\"\n          value={newContactName}\n          onChange={(e) => setNewContactName(e.target.value)}\n        />\n        <button className={styles.addContactButton} onClick={addContact}>\n          Add Contact\n        </button>\n        <button data-testid=\"duplicateContactsButton\" className={styles.duplicateButton} onClick={duplicateContacts}>\n          Duplicate Contacts\n        </button>\n      </div>\n      <button className={styles.sortButton} onClick={sortContacts}>\n        Sort Contacts\n      </button>\n      <ul className={styles.contactList}>\n        {contacts.map((contact) => (\n          <li key={contact.id} className={styles.contactItem} data-testid=\"contactItem\">\n            {contact.name}{' '}\n            <button className={styles.deleteButton} onClick={() => deleteContact(contact.id)}>\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Contacts;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}